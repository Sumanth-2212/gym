version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: fitness-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: fitness_db
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - fitness-network

  redis:
    image: redis:7-alpine
    container_name: fitness-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - fitness-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fitness-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILE: docker
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/fitness_db?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970}
      WORKOUT_SERVICE_URL: ${WORKOUT_SERVICE_URL:-http://localhost:8001}
      NUTRITION_SERVICE_URL: ${NUTRITION_SERVICE_URL:-http://localhost:8002}
      POSE_SERVICE_URL: ${POSE_SERVICE_URL:-http://localhost:8003}
      CHATBOT_SERVICE_URL: ${CHATBOT_SERVICE_URL:-http://localhost:8004}
    depends_on:
      - mongodb
      - redis
    networks:
      - fitness-network
    volumes:
      - ./logs:/app/logs

volumes:
  mongodb_data:
  redis_data:

networks:
  fitness-network:
    driver: bridge